apiVersion: apps/v1           # API version
kind: Deployment              # Type of kubernetes resource
metadata:
  name: api    # Name of the kubernetes resource
  labels:                     # Labels that will be applied to this resource
    app: api
spec:
  replicas: 1                 # No. of replicas/pods to run in this deployment
  selector:
    matchLabels:              # The deployment applies to any pods mayching the specified labels
      app: api
  template:                   # Template for creating the pods in this deployment
    metadata:
      labels:                 # Labels that will be applied to each Pod in this deployment
        app: api
    spec:                     # Spec for the containers that will be run in the Pods
      containers:
      - name: api
        image: api
        ports:
          - name: http
            containerPort: 8080 # The port that the container exposes
        env:                  # Environment variables supplied to the Pod
        - name: SPRING_DATASOURCE_USERNAME # Name of the environment variable
          valueFrom:          # Get the value of environment variable from kubernetes secrets
            secretKeyRef:
              name: mysql-user-pass
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass
              key: password
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: mysql-db-url
              key: url
---
apiVersion: v1                # API version
kind: Service                 # Type of the kubernetes resource
metadata:                     
  name: api    # Name of the kubernetes resource
  labels:                     # Labels that will be applied to this resource
    app: api
spec:                         
  type: ClusterIP                # Exposes the service by opening a port on each node
  selector:
    app: api   # The service exposes Pods with label `app=polling-app-server`
  ports:                      # Forward incoming connections on port 8080 to the target port 8080
  - name: http
    port: 8080
    targetPort: 8080
